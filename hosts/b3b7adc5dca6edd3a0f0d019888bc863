export HOME='/afsuser/obreitwi'
export AFSHOME='/afsuser/obreitwi'
export FNBHOME='/srv/homes/obreitwi'
alias setAFS='export HOME=$AFSHOME'
alias setFNB='export HOME=$FNBHOME'

export TMPDIR=/scratch/obreitwi/tmp_cluster
cd ~

alias ssh_kp='ssh-add ~/.ssh/keys/id_kip'
alias ssh_gc="ssh-add ~/.ssh/keys/id_gc"

# export PATH='/fastnbig/home/obreitwi/usr/bin':$PATH
# export PYTHONPATH=\
# '/fastnbig/home/obreitwi/.local/lib/python2.6/site-packages'\
# :'/usr/local/lib/python2.6/dist-packages'\
# :'/usr/lib/python2.6/dist-packages'\
# :'/fastnbig/home/obreitwi/usr/lib/python2.6'\
# :'/fastnbig/home/obreitwi/usr/lib/python2.6/site-packages'\
# :'/fastnbig/home/obreitwi/git/model-kth-l23/analysis'\
# :'/fastnbig/home/obreitwi/usr/lib'\
# :$PYTHONPATH
# export TMPDIR='/fastnbig/home/obreitwi/local_tmp'
#
export PYTHONPATH=\
$HOME/git/model-kth-l23/analysis\
:$HOME/usr/lib/python2.7/site-packages\
:$PYTHONPATH

alias -g SIMULTI='$FNBHOME/git/model-kth-l23/model_ultimate/main.py'
alias -g SIMNO='$FNBHOME/git/model-kth-l23/model_non_ortho/main.py'
alias -g ANAONE='$FNBHOME/git/model-kth-l23/analysis/analyze_one.py'
alias -g ANACOMP='$FNBHOME/git/KTH23_Custom/check_patterns/check_pattern_completion.py'

export LD_LIBRARY_PATH=\
$HOME/usr/lib\
:$LD_LIBRARY_PATH

# export PYTHONDIR='/usr/local/lib/python2.6'
# export PYTHONINC='/usr/include/python2.6'
# export BOOSTINC='~/usr/include/boost'

# alias tmux='tmuxc'

# Copy Xauthority if we are not in tmux
refresh_display() {
	if [ -z $TMUX ]; then
		cp /afsuser/obreitwi/.Xauthority $FNBHOME
		echo -n $DISPLAY > $FNBHOME/.display
	else
		export DISPLAY=`cat $FNBHOME/.display`
	fi
}
refresh_display
zle -N refresh_display


show_job_detail (){
	for jobid in $(get_job_ids); do
		echo -n "$jobid\t"; scontrol show job $jobid | grep "^\s*$1=" | sed "s:^\s*$1=::"
	done
}
zle -N show_job_detail

show_job_commands() {
	show_job_detail Command
}
zle -N show_job_commands

get_job_ids() {
	squeue -h -u $USER -o %i
}
zle -N get_job_ids

get_active_eta() {
	if [[ $# -eq 0 ]]; then
		folders=("$(pwd)")
	else
		folders=($@[@])
	fi
	for jobid in $(get_job_ids); do
		file="slurm-$jobid.out"
		for folder in $folders; do
			filename="$folder/$file" 
			if [[ -a "$filename" ]]; then
				echo -n "$jobid: "
				grep ETA "$filename" | tail -n 1
			fi
		done
	done
}
zle -N get_active_eta

get_active_eta_short() {
	if [[ $# -eq 0 ]]; then
		print "Need at least one argument."
	fi
	args=($@[@])
	num_dirs=$args[0]
	args[0]=()
	get_active_eta $args[@] | sed "s:</\([^/]\+/\)\{$num_dirs\}:<(...):"
}

# alias cat_params='python $FNBHOME/git/KTH23_Custom/cat_params.py'
alias do_raster='python $FNBHOME/git/KTH23_Custom/do_raster_plot.py'

# Work around for broken cdr -l
# alias cdl='cat -n ~/.chpwd-recent-dirs'

# module
source /afs/kip.uni-heidelberg.de/projects/vision/definst_software/zshrc

source $HOME/.zsh/special/check_sims

export MODULEPATH=\
$HOME/opt/modules/versions\
:$MODULEPATH

export CPATH=\
$HOME/usr/include\
:$CPATH

alias -g srunb="srun --partition=batch"

alias -g DEFCTRL_II=simrun,comp_samples,comp_dist,comp_ll,comp_aff,plot_dii_aff_ll_ws_b_r,ani_dii_aff_ll_ws_b_r,plot_spk_pat
alias -g DEFCTRL=simrun,comp_samples,comp_dist,comp_ll,comp_aff,plot_dii_aff_ll_ws_b_r,ani_dii_aff_ll_ws_b_r,plot_spk_pat

module load vim

# vim: ft=zsh
